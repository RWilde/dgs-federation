plugins {
    id 'org.springframework.boot' version '2.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.netflix.dgs.codegen" version "5.1.9"
}

group = 'poc.graphql'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation(platform("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:latest.release"))
    implementation 'com.netflix.graphql.dgs:graphql-dgs-extended-scalars'
    implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.security:spring-security-core'

    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.data:spring-data-mongodb-parent:3.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:2.5.6'
    implementation 'org.springframework.data:spring-data-mongodb:3.3.0'
}
build {
    generateJava {
        schemaPaths = ["${projectDir}/src/main/resources/schema"] // List of directories containing schema files
        packageName = 'com.thesting.user' // The package name to use to generate sources
        generateClient = true // Enable generating the type safe query API
        typeMapping = ["UUID": "java.util.UUID"]
    }
}
//test {
//	useJUnitPlatform()
//}
